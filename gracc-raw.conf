input {
    rabbitmq {
        host => "localhost"
        vhost => ""
        user => "guest"
        password => "guest"

        exchange => "gracc.raw"
        queue => "grace.raw"
        durable => true

        codec => "json"
        type => "JobUsageRecord"
    }
}
filter {
    # use EndTime as logstash timestamp
    if [EndTime] {
        mutate {
            rename => { "@timestamp" => "@received" }
        }
        date {
            match => [ 'EndTime', 'ISO8601' ]
        }
    }
    # Convert numeric fields
    mutate {
        convert => {
            "Processors" => "integer"
            "Memory" => "float"
            "Swap" => "float"
            "Network" => "float"
        }
    }
    # Pre-compute derived fields
    ruby {
        code => "event['CoreHours'] = Float(event['WallDuration'] || 0.0) * Float(event['Processors'] || 1.0) / 3600.0"
    }
    # Calculate fingerprint
    #  - Remove select fields, based on fields omitted by Gratia
    #  - Sort remaining fields
    #  - Generate JSON
    #  - Calculate MD5
    ruby {
        code => "
            require 'openssl'
            require 'json'
            excl_keys = ['RecordId','CreateTime','GlobalUsername','LocalUserId',
                      'VOName','ReportableVOName','CommonName','SiteName','Grid',
                      'RawXML','type','@timestamp','@received','@version']
            rec_to_hash = event.to_hash.reject {|k,v| excl_keys.include?(k)}
            rec_str = Hash[rec_to_hash.sort].to_json
            #event['checksum_str'] = rec_str
            event['checksum'] = OpenSSL::Digest.hexdigest('md5',rec_str)
        "
    }
}
output {
    elasticsearch {
        hosts => [ "localhost" ]
        index => "gracc.raw-%{+YYYY.MM.dd}"
        document_id => "%{checksum}"
        template_name => "gracc.raw"
        template => "/usr/share/gracc/gracc-raw-template.json"
        manage_template => true
        template_overwrite => true
    }
    #stdout {codec => "rubydebug"}
}
